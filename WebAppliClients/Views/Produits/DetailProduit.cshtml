@using ModelsCommun

@model Produit

<p><h4>Information sur le produit selectionné </h4></p>

<div class="container mt-5">
    <h3>Détails du Produit</h3>
    <hr>

    <dl class="row">
        <dt class="col-sm-2">Nom</dt>
        <dd class="col-sm-10">@Model.Nom</dd>

        <dt class="col-sm-2">Prix</dt>
        <dd class="col-sm-10">@Model.Prix</dd>

        <dt class="col-sm-2">Quantité Disponible</dt>
        <dd class="col-sm-10">@Model.QuantiteDisponible</dd>
    </dl>

    <form id="addToCartForm">
        <label for="quantity">Quantité:</label>
        <input type="number" id="quantity" name="quantity" min="1" max="@Model.QuantiteDisponible" value="1">
       @*  liaison entre la quantité dispo et la quantité de produit mis dans le panier *@
        <button type="submit" class="btn btn-primary" onclick="ajouterAuPanier()">Ajouter au Panier</button>
    </form>
</div>
@* 
<script>
    function ajouterAuPanier(productId, productName, productPrice, maxQuantity) {
        var selectedQuantity = parseInt(document.getElementById('quantity_' + productId).value);

        if (selectedQuantity <= 0 || selectedQuantity > maxQuantity) {
            alert('Quantité invalide. Veuillez sélectionner une quantité valide.');
            return;
        }

        var produit = {
            Id: productId,
            Nom: productName,
            Prix: productPrice,
            Quantite: selectedQuantity
        };

        var panier = JSON.parse(localStorage.getItem('panier')) || [];
        panier.push(produit);
        localStorage.setItem('panier', JSON.stringify(panier));

        afficherPanier();
    }

    function afficherPanier() {
        var panier = JSON.parse(localStorage.getItem('panier')) || [];
        var panierListElement = document.getElementById('panierList');
        panierListElement.innerHTML = '';

        panier.foreach(function (produit) {
            var listItem = document.createElement('li');
            listItem.textContent = produit.Nom + ' - Quantité: ' + produit.Quantite + ' - Prix unitaire: ' + produit.Prix;
            panierListElement.appendChild(listItem);
        });
    }

    // Initialiser l'affichage du panier lors du chargement de la page
    afficherPanier();
</script>

 *@






@* 
<script>
    function ajouterAuPanier() {
        var productId = @Html.Raw(Json.Serialize(Model.ID));
        var productName = '@Html.Raw(Json.Serialize(Model.Nom))';
        var productPrice = @Html.Raw(Json.Serialize(Model.Prix));
        var maxQuantity = @Html.Raw(Json.Serialize(Model.QuantiteDisponible));
        var selectedQuantity = document.getElementById('quantity').value;

        // Vérifiez si la quantité sélectionnée est valide
        if (selectedQuantity <= 0 || selectedQuantity > maxQuantity) {
            alert('Quantité non valide. Veuillez sélectionner une quantité entre 1 et ' + maxQuantity + '.');
            return;
        }

        // Ajouter le produit dans le panier
        var cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

        var newItem = {
            id: productId,
            name: productName,
            price: productPrice,
            quantity: selectedQuantity
        };

        cartItems.push(newItem);
        localStorage.setItem('cartItems', JSON.stringify(cartItems));

        // Redirigez vers la liste des produits après avoir ajouté le produit au panier
        window.location.href = '/list';
    }
}
</script>

<script>
    function addToCart() {
        var productId = @Html.Raw(Json.Serialize(Model.ID));
        var productName = '@Html.Raw(Json.Serialize(Model.Nom))';
        var productPrice = @Html.Raw(Json.Serialize(Model.Prix));
        var maxQuantity = @Html.Raw(Json.Serialize(Model.QuantiteDisponible));
        var selectedQuantity = document.getElementById('quantity').value;

        // Vérification si la quantité sélectionnée est valide
        if (selectedQuantity <= 0 || selectedQuantity > maxQuantity) {
            alert('Quantité non valide. Veuillez sélectionner une quantité entre 1 et ' + maxQuantity + '.');
            return;
        }

        // ajout de la logique pour ajouter le produit à la liste ici



        // utiliser une variable JavaScript pour stocker la liste???? I DON'T KNOW HOW TO DO THAT**
        var cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

        var newItem = {
            id: productId,
            name: productName,
            price: productPrice,
            quantity: selectedQuantity
        };

        cartItems.push(newItem);
        localStorage.setItem('cartItems', JSON.stringify(cartItems));

        // Redirection vers la liste des produits après avoir ajouté le produit au panier
        window.location.href = '/produits';
    }

</script>
 *@